Scenario -- 1:
**************

CREATE OR REPLACE PROCEDURE SafeTransferFunds(p_from_account IN NUMBER, p_to_account IN NUMBER, p_amount IN NUMBER) AS
BEGIN
    -- Ensure sufficient funds
    DECLARE
        v_balance NUMBER;
    BEGIN
        SELECT Balance INTO v_balance FROM Accounts WHERE AccountID = p_from_account;
        IF v_balance < p_amount THEN
            RAISE_APPLICATION_ERROR(-20001, 'Insufficient funds.');
        END IF;
    END;

    -- Perform the transfer
    BEGIN
        UPDATE Accounts SET Balance = Balance - p_amount WHERE AccountID = p_from_account;
        UPDATE Accounts SET Balance = Balance + p_amount WHERE AccountID = p_to_account;
        COMMIT;
    EXCEPTION
        WHEN OTHERS THEN
            ROLLBACK;
            DBMS_OUTPUT.PUT_LINE('Error occurred during fund transfer: ' || SQLERRM);
    END;
END;



Scenario -- 2:
**************

CREATE OR REPLACE PROCEDURE UpdateSalary(p_employee_id IN NUMBER, p_percentage IN NUMBER) AS
BEGIN
    UPDATE Employees
    SET Salary = Salary + Salary * p_percentage / 100
    WHERE EmployeeID = p_employee_id;

    IF SQL%ROWCOUNT = 0 THEN
        RAISE_APPLICATION_ERROR(-20002, 'Employee ID does not exist.');
    END IF;
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error occurred during salary update: ' || SQLERRM);
END;



Scenario -- 3:
**************

CREATE OR REPLACE PROCEDURE AddNewCustomer(p_customer_id IN NUMBER, p_name IN VARCHAR2, p_dob IN DATE, p_balance IN NUMBER) AS
BEGIN
    BEGIN
        INSERT INTO Customers (CustomerID, Name, DOB, Balance, LastModified)
        VALUES (p_customer_id, p_name, p_dob, p_balance, SYSDATE);
        COMMIT;
    EXCEPTION
        WHEN DUP_VAL_ON_INDEX THEN
            DBMS_OUTPUT.PUT_LINE('Customer with ID ' || p_customer_id || ' already exists.');
    END;
END;
